version: 2.1
orbs:
  codecov: codecov/codecov@5.0.3
  slack: circleci/slack@5.0.0


executors:
  golang:
    docker:
      - image: cimg/go:1.22.5
    working_directory: ~/project

commands:
  build_packages:
    parameters:
      goos:
        type: string
      goarch:
        type: string
    steps:
      - run:
          name: Build for << parameters.goos >> (<< parameters.goarch >>)
          command: GOOS=<< parameters.goos >> GOARCH=<< parameters.goarch >> go build -o /tmp/yip-<< parameters.goos >>-<< parameters.goarch >>
      - store_artifacts:
          path: /tmp/yip-<< parameters.goos >>-<< parameters.goarch >>
          destination: yip-<< parameters.goos >>-<< parameters.goarch >>

jobs:
  test:
    executor: golang
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
    - checkout
    - run:
        name: Install JUnit
        command: |
          go get github.com/jstemmer/go-junit-report
    - run: mkdir -p /tmp/test-results
    - run:
        name: Install dependencies
        command: |
          git config --global url."git@github.com:".insteadOf "https://github.com/"
          go get -t -v ./...
    - run:
        name: Run unit tests
        command: |
          git clone git@github.com:launchpadcentral/cicd.git
          ./cicd/scripts/test_microservice.sh
          apk add --no-cache gnupg
    - codecov/upload:
        file: coverage.lcov
    - store_artifacts:
         path: ./coverage.lcov
         prefix: tests

  build:
    parameters:
      goos:
        type: string
      goarch:
        type: string
    executor: golang
    steps:
      - checkout
      - build_packages:
          goos: << parameters.goos >>
          goarch: << parameters.goarch >>
      - persist_to_workspace:
          root: /tmp
          paths:
            - yip-<< parameters.goos >>-<< parameters.goarch >>

workflows:
  version: 2
  test-build:
    jobs:
      - test
      - build:
          name: build_darwin_amd64
          goos: darwin
          goarch: amd64
          requires:
            - test
      - build:
          name: build_darwin_arm64
          goos: darwin
          goarch: arm64
          requires:
            - test
      - build:
          name: build_linux_amd64
          goos: linux
          goarch: amd64
          requires:
            - test
